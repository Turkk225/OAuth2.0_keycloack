spring.application.name=authKeycloak
#spring.application.name=keycloak-auth-service
spring.security.oauth2.resourceserver.jwt.issuer-uri=${app.keycloak.serverUrl}/realms/${app.keycloak.realm}
server.port=8081
#server.servlet.context-path=/auth
app.keycloak.admin.clientId=admin-cli
app.keycloak.admin.clientSecret=ibSpk0d9YiTCMns0nAy7J4f4TiQq2cek
app.keycloak.realm=SpringText
app.keycloak.serverUrl=http://localhost:8080
app.keycloak.auth.tokenUrl=${app.keycloak.serverUrl}/realms/${app.keycloak.realm}/protocol/openid-connect/token
#http://localhost:8080/realms/SpringText/protocol/openid-connect/token
app.keycloak.auth.clientId=my-app-client
app.keycloak.auth.clientSecret=baw4ZL5GkWjpLbX5qxVMcwaAfZJdC6Fr
#keycloak.credentials.provider=secret


keycloak.client-id=auth-trailer
keycloak.client-secret=0fTmDqI5pmx2ChSAb97OEcLP4bj9SKNz
keycloak.token-url=http://localhost:8080/realms/keycloak-trailer/protocol/openid-connect/token
keycloak.logout-url=http://localhost:8080/realms/keycloak-trailer/protocol/openid-connect/logout
keycloak.revoke-token-url=http://localhost:8080/realms/keycloak-trailer/protocol/openid-connect/revoke
keycloak.token-issuer-url=http://localhost:8080/realms/keycloak-trailer
keycloak.userinfo-url=http://localhost:8080/realms/keycloak-trailer/protocol/openid-connect/userinfo
keycloak.update-url=http://localhost:8080/admin/realms/keycloak-trailer/users
keycloak.all-users-url=http://localhost:8080/admin/realms/keycloak-trailer/users
keycloak.admin-token-url=http://localhost:8080/realms/master/protocol/openid-connect/token

keycloak.realm-container-id=c54dbbb3-e66d-44cb-82e4-1b4e866ab5bc
keycloak.user-role-id=a5bff5d4-d539-4a47-b71d-1758171f85f8
keycloak.user-role-name=admin

keycloak.user-role-id-users=2b9995aa-8c94-4496-a525-23a7e7a6bd3a
keycloak.user-role-name-users=user

spring.datasource.url = jdbc:postgresql://localhost:5432/authkeycloakBD
spring.datasource.username = Hermann
spring.datasource.password = postgres
spring.datasource.tomcat.initial-size=8
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=16
spring.datasource.tomcat.max-idle=6
spring.datasource.tomcat.min-idle=4
spring.datasource.tomcat.default-auto-commit=true
spring.jpa.hibernate.ddl-auto = update


# Logging
logging.level.org.springframework.security= TRACE

# Keep the connection alive if idle for a long time (needed in production)

#enabling overriding
spring.main.allow-bean-definition-overriding=true

# Show or not log for each sql query
spring.jpa.show-sql = true
#spring.jpa.properties.hibernate.use_sql_comments=true
#spring.jpa.properties.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.properties.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.enable_lazy_load_no_trans=true

#spring boot admin monotoring
#spring.boot.admin.url=https://127.0.0.1:8080

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#spring.jackson.serialization.fail-on-empty-beans=false

spring.mvc.pathmatch.matching-strategy=ant_path_matcher